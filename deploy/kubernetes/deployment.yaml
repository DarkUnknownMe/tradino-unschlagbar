# =========================================================================
# TRADINO UNSCHLAGBAR - Kubernetes Deployment
# Main application deployment with high availability and security
# =========================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tradino-app
  namespace: tradino-production
  labels:
    app: tradino
    component: app
    version: "1.0.0"
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "TRADINO Advanced AI Trading System Main Application"
spec:
  replicas: 2
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: tradino
      component: app
  template:
    metadata:
      labels:
        app: tradino
        component: app
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: tradino-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Init container for database migration
      initContainers:
      - name: migration
        image: tradino:latest
        command: ["python", "scripts/migrate_database.py"]
        envFrom:
        - configMapRef:
            name: tradino-config
        - secretRef:
            name: tradino-secrets
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: temp-volume
          mountPath: /tmp
      
      containers:
      - name: tradino-app
        image: tradino:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: dashboard
          containerPort: 8001
          protocol: TCP
        - name: metrics
          containerPort: 8002
          protocol: TCP
        
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        
        envFrom:
        - configMapRef:
            name: tradino-config
        - secretRef:
            name: tradino-secrets
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /startup
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
        - name: models-volume
          mountPath: /app/models
        - name: temp-volume
          mountPath: /tmp
        - name: config-volume
          mountPath: /app/config/runtime
          readOnly: true
        
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - "sleep 15; python scripts/graceful_shutdown.py"
      
      # Sidecar container for log forwarding
      - name: log-forwarder
        image: fluentd:v1.16
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        volumeMounts:
        - name: logs-volume
          mountPath: /app/logs
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: tradino-data-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: tradino-logs-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: tradino-models-pvc
      - name: temp-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: config-volume
        configMap:
          name: tradino-config
      - name: fluentd-config
        configMap:
          name: tradino-fluentd-config
      
      # Node affinity for performance
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - compute-optimized
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - tradino
                - key: component
                  operator: In
                  values:
                  - app
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for dedicated nodes
      tolerations:
      - key: tradino.io/dedicated
        operator: Equal
        value: "true"
        effect: NoSchedule
      
      # DNS configuration
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0
      
      terminationGracePeriodSeconds: 30
      restartPolicy: Always

---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tradino-redis
  namespace: tradino-production
  labels:
    app: tradino
    component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tradino
      component: redis
  template:
    metadata:
      labels:
        app: tradino
        component: redis
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - name: redis
          containerPort: 6379
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tradino-secrets
              key: redis-password
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
          readOnly: true
        - name: temp-volume
          mountPath: /tmp
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: tradino-redis-pvc
      - name: redis-config
        configMap:
          name: tradino-redis-config
      - name: temp-volume
        emptyDir:
          sizeLimit: 100Mi

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tradino-postgres
  namespace: tradino-production
  labels:
    app: tradino
    component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tradino
      component: postgres
  template:
    metadata:
      labels:
        app: tradino
        component: postgres
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - name: postgres
          containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: tradino-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: tradino-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tradino-secrets
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: "250m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: temp-volume
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run/postgresql
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: tradino-postgres-pvc
      - name: temp-volume
        emptyDir:
          sizeLimit: 100Mi
      - name: var-run
        emptyDir:
          sizeLimit: 100Mi 