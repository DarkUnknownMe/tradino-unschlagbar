version: '3.8'

services:
  tradino-bot:
    build:
      context: ../..
      dockerfile: Dockerfile
    container_name: tradino-unschlagbar
    restart: unless-stopped
    env_file:
      - ../../.env
    volumes:
      - ../../data:/app/data
      - ../../logs:/app/logs
      - ../../models:/app/models
    ports:
      - "8080:8080"
    networks:
      - tradino-network
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: tradino-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tradino-network
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    container_name: tradino-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tradino
      POSTGRES_USER: tradino
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tradino-network

  monitoring:
    image: prom/prometheus:latest
    container_name: tradino-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - tradino-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  tradino-network:
    driver: bridge 